spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/TicketCommerce
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/ticket_db
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5
  application:
    name: ticket-service
  cloud:
    stream:
      bindings:
        reserveOrder-in-0:
          destination: seat-reserved
          group: { spring.application.name }

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

server:
  port: 9001

ticket:
  greeting: Hello on our new ticket service!

management:
  endpoints:
    web:
      exposure:
        include: env, configprops, flyway, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

info:
  system: Ticket-service